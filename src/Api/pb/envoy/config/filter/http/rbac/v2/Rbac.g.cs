// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/config/filter/http/rbac/v2/rbac.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Config.Filter.Http.Rbac.V2 {

  /// <summary>Holder for reflection information generated from envoy/config/filter/http/rbac/v2/rbac.proto</summary>
  public static partial class RbacReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/config/filter/http/rbac/v2/rbac.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RbacReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CitlbnZveS9jb25maWcvZmlsdGVyL2h0dHAvcmJhYy92Mi9yYmFjLnByb3Rv",
            "EiBlbnZveS5jb25maWcuZmlsdGVyLmh0dHAucmJhYy52MhokZW52b3kvY29u",
            "ZmlnL3JiYWMvdjJhbHBoYS9yYmFjLnByb3RvGhd2YWxpZGF0ZS92YWxpZGF0",
            "ZS5wcm90bxoUZ29nb3Byb3RvL2dvZ28ucHJvdG8iQgoEUkJBQxI6CgVydWxl",
            "cxgBIAEoCzIfLmVudm95LmNvbmZpZy5yYmFjLnYyYWxwaGEuUkJBQ0IKuunA",
            "AwWKAQIQASKEAQoMUkJBQ1BlclJvdXRlEh0KCGRpc2FibGVkGAEgASgIQgm6",
            "6cADBGoCCAFIABJCCgRyYmFjGAIgASgLMiYuZW52b3kuY29uZmlnLmZpbHRl",
            "ci5odHRwLnJiYWMudjIuUkJBQ0IKuunAAwWKAQIQAUgAQhEKCG92ZXJyaWRl",
            "EgW46cADAUIEWgJ2MmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Config.Rbac.V2Alpha.RbacReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, global::Gogoproto.GogoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Filter.Http.Rbac.V2.RBAC), global::Envoy.Config.Filter.Http.Rbac.V2.RBAC.Parser, new[]{ "Rules" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Filter.Http.Rbac.V2.RBACPerRoute), global::Envoy.Config.Filter.Http.Rbac.V2.RBACPerRoute.Parser, new[]{ "Disabled", "Rbac" }, new[]{ "Override" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RBAC : pb::IMessage<RBAC> {
    private static readonly pb::MessageParser<RBAC> _parser = new pb::MessageParser<RBAC>(() => new RBAC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RBAC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.Filter.Http.Rbac.V2.RbacReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RBAC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RBAC(RBAC other) : this() {
      Rules = other.rules_ != null ? other.Rules.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RBAC Clone() {
      return new RBAC(this);
    }

    /// <summary>Field number for the "rules" field.</summary>
    public const int RulesFieldNumber = 1;
    private global::Envoy.Config.Rbac.V2Alpha.RBAC rules_;
    /// <summary>
    /// Specify the RBAC rules to be applied globally
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Config.Rbac.V2Alpha.RBAC Rules {
      get { return rules_; }
      set {
        rules_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RBAC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RBAC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Rules, other.Rules)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rules_ != null) hash ^= Rules.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (rules_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Rules);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rules_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rules);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RBAC other) {
      if (other == null) {
        return;
      }
      if (other.rules_ != null) {
        if (rules_ == null) {
          rules_ = new global::Envoy.Config.Rbac.V2Alpha.RBAC();
        }
        Rules.MergeFrom(other.Rules);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (rules_ == null) {
              rules_ = new global::Envoy.Config.Rbac.V2Alpha.RBAC();
            }
            input.ReadMessage(rules_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RBACPerRoute : pb::IMessage<RBACPerRoute> {
    private static readonly pb::MessageParser<RBACPerRoute> _parser = new pb::MessageParser<RBACPerRoute>(() => new RBACPerRoute());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RBACPerRoute> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.Filter.Http.Rbac.V2.RbacReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RBACPerRoute() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RBACPerRoute(RBACPerRoute other) : this() {
      switch (other.OverrideCase) {
        case OverrideOneofCase.Disabled:
          Disabled = other.Disabled;
          break;
        case OverrideOneofCase.Rbac:
          Rbac = other.Rbac.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RBACPerRoute Clone() {
      return new RBACPerRoute(this);
    }

    /// <summary>Field number for the "disabled" field.</summary>
    public const int DisabledFieldNumber = 1;
    /// <summary>
    /// Disable the filter for this particular vhost or route.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Disabled {
      get { return overrideCase_ == OverrideOneofCase.Disabled ? (bool) override_ : false; }
      set {
        override_ = value;
        overrideCase_ = OverrideOneofCase.Disabled;
      }
    }

    /// <summary>Field number for the "rbac" field.</summary>
    public const int RbacFieldNumber = 2;
    /// <summary>
    /// Override the global configuration of the filter with this new config.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Config.Filter.Http.Rbac.V2.RBAC Rbac {
      get { return overrideCase_ == OverrideOneofCase.Rbac ? (global::Envoy.Config.Filter.Http.Rbac.V2.RBAC) override_ : null; }
      set {
        override_ = value;
        overrideCase_ = value == null ? OverrideOneofCase.None : OverrideOneofCase.Rbac;
      }
    }

    private object override_;
    /// <summary>Enum of possible cases for the "override" oneof.</summary>
    public enum OverrideOneofCase {
      None = 0,
      Disabled = 1,
      Rbac = 2,
    }
    private OverrideOneofCase overrideCase_ = OverrideOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverrideOneofCase OverrideCase {
      get { return overrideCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOverride() {
      overrideCase_ = OverrideOneofCase.None;
      override_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RBACPerRoute);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RBACPerRoute other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Disabled != other.Disabled) return false;
      if (!object.Equals(Rbac, other.Rbac)) return false;
      if (OverrideCase != other.OverrideCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (overrideCase_ == OverrideOneofCase.Disabled) hash ^= Disabled.GetHashCode();
      if (overrideCase_ == OverrideOneofCase.Rbac) hash ^= Rbac.GetHashCode();
      hash ^= (int) overrideCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (overrideCase_ == OverrideOneofCase.Disabled) {
        output.WriteRawTag(8);
        output.WriteBool(Disabled);
      }
      if (overrideCase_ == OverrideOneofCase.Rbac) {
        output.WriteRawTag(18);
        output.WriteMessage(Rbac);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (overrideCase_ == OverrideOneofCase.Disabled) {
        size += 1 + 1;
      }
      if (overrideCase_ == OverrideOneofCase.Rbac) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rbac);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RBACPerRoute other) {
      if (other == null) {
        return;
      }
      switch (other.OverrideCase) {
        case OverrideOneofCase.Disabled:
          Disabled = other.Disabled;
          break;
        case OverrideOneofCase.Rbac:
          if (Rbac == null) {
            Rbac = new global::Envoy.Config.Filter.Http.Rbac.V2.RBAC();
          }
          Rbac.MergeFrom(other.Rbac);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Disabled = input.ReadBool();
            break;
          }
          case 18: {
            global::Envoy.Config.Filter.Http.Rbac.V2.RBAC subBuilder = new global::Envoy.Config.Filter.Http.Rbac.V2.RBAC();
            if (overrideCase_ == OverrideOneofCase.Rbac) {
              subBuilder.MergeFrom(Rbac);
            }
            input.ReadMessage(subBuilder);
            Rbac = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
